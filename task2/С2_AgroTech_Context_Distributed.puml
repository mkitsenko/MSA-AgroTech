@startuml
title Контекстная диаграмма АгроТех мониторинг животноводства (распределенная)

top to bottom direction

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' === Участники ==='
Person(operator, "Персонал", "Мониторинг состояния животных")
Person(admin, "Администраторы", "Управление системой")

' === Cистемы ==='
Container_Boundary(agrotech_system_agent_1, "АгроТех сервер-агент мониторинга животноводства") {
  Container(sa_web_app, "Веб-приложение", "C#", "Обрабатывает поток данных")
  ContainerDb(sa_database, "База данных", "PostgreSQL", "Хранит данные")
}

Container_Boundary(central_system, "АгроТех центральный-сервер мониторинга животноводства") {
  Container(cs_web_app, "Веб-приложение", "C#", "Обрабатывает и синхронизирует данные с серверов-агентов")
  ContainerDb(cs_database, "База данных", "PostgreSQL", "Хранит данные")
}

' === Внешние системы ==='
System_Ext(device_controllers, "Система управления устройствами", "Внешняя система управления устройствами на ферме")
System_Ext(iot_system, "Система данных с устройств", "Внешняя система предоставления данных с устройств")
System_Ext(metrics_consumer, "Система потребления метрик", "Внешняя система потребления метрик")
System_Ext(client, "Клиенты системы", "Клиенты системы веб или мобильные приложения")
System_Ext(notification_system, "Система уведомлений", "Внешняя система отправки уведомлений")
ContainerQueue_Ext(service_bus,"Apache Kafka", "Передает данные от публикатора подписчику")

' === Отношения ==='
Rel(sa_web_app, service_bus,"Публикует данные")
Rel(sa_web_app, sa_database,"Читает\записывает данные SQL\TCP")
Rel(sa_web_app, metrics_consumer,"Публикует метрики в Prometheus (REST API)")
Rel(sa_web_app, notification_system,"Отправляет уведомления")
Rel(sa_web_app, service_bus, "Отправляет команды управления устройствами")
Rel(sa_web_app, cs_web_app,"Взаимодействие через API (REST API)")

Rel(iot_system, sa_web_app,"Предоставляет поток данных с устройств для анализа (gRPC)")

Rel(cs_web_app, cs_database,"Читает\записывает данные SQL\TCP")
Rel(cs_web_app, metrics_consumer,"Публикует метрики в Prometheus (REST API)")
Rel(cs_web_app, notification_system,"Отправляет уведомления")


Rel(service_bus, cs_web_app, "Потребляет данные")
Rel(service_bus, device_controllers, "Отправляет команды управления устройствами")

Rel(admin, cs_web_app,"Управляет системой (REST API)")
Rel(admin, sa_web_app,"Управляет системой (REST API)")

Rel(operator, cs_web_app, "Пользуется системой (REST API)")
Rel(operator, sa_web_app, "Пользуется системой (REST API)")

'Rel(agrotech_system_agent_1,notification_system,"Отправляет уведомления")
'Rel(agrotech_system_agent_1, agrotech_central_server, "Отправляет данные на центральный сервер")
'Rel(agrotech_system_agent_1,metrics_consumer,"Предоставляет метрики потребителям")
'Rel(agrotech_system_agent_1,device_controllers,"Управляет устройствами")
'
'Rel(agrotech_system_agent_n, agrotech_central_server, "Пользуется системой")
'Rel(agrotech_system_agent_n,notification_system,"Отправляет данные на центральный сервер")
'Rel(agrotech_system_agent_n,metrics_consumer,"Предоставляет метрики потребителям")
'Rel(agrotech_system_agent_n,device_controllers,"Управляет устройствами")
'
'
'Rel(agrotech_central_server,notification_system,"Отправляет уведомления")
'Rel(agrotech_central_server,metrics_consumer,"Предоставляет метрики потребителям")
'
Rel(client, cs_web_app, "Взаимодействует с системой через API (REST API)")
Rel(client, sa_web_app, "Взаимодействует с системой через API (REST API)")




@enduml